#!/usr/bin/env zsh
. $HOME/.system-config/scripts/set-up-projects.sh $1

echo "Project $CYAN$PROJECTNAME will be created!"$RESET

# make the project folder
mkdir $PROJECTNAME

# cd into it.
cd "$PROJECTNAME"

# use jo (https://github.com/jpmens/jo) to create JSON files.

# create the monorepo lerna.json file.
jo -p '$schema'="node_modules/lerna/schemas/lerna-schema.json" \
  useNx=true \
  useWorkspaces=true \
  version="0.0.1" >lerna.json

# create the monorepo package.json file.
jo -p name=root \
  private=true \
  workspaces=$(jo -a "site" "studio") \
  devDependencies=$(jo lerna="^5.3.0") \
  scripts=$(jo start=hivemind) >package.json

# create the monorepo Procfile file.
cat >Procfile <<'EOL'
studio: yarn --cwd ./studio/ start
web: yarn --cwd ./site/ start
EOL

# create the monorepo .gitignore
cat >.gitignore <<'EOL'
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Dependencies
/node_modules
/.pnp
.pnp.js

# Compiled Sanity Studio
/dist

# Temporary Sanity runtime, generated by the CLI on every dev server start
/.sanity

# Logs
/logs
*.log

# Coverage directory used by testing tools
/coverage

# Misc
.DS_Store
*.pem

# Typescript
*.tsbuildinfo

# error logs
yarn-error.log

# env files
.env

# Local Netlify folder if it exists
.netlify
EOL

# clone in our Sanity Studio starter
git clone https://github.com/dwkns/dwkns-sanity-start.git studio

# change the name property of package.json
tmp=$(mktemp)
JQVAR=".name = \"$PROJECTNAME-studio\""
jq "$JQVAR" ./studio/package.json >"$tmp" && mv "$tmp" ./studio/package.json

# add author  to package.json
tmp=$(mktemp)
JQVAR=".author = \"$USER\""
jq "$JQVAR" ./studio/package.json >"$tmp" && mv "$tmp" ./studio/package.json

# clone on the eleventy starter
git clone https://github.com/dwkns/tiny-start.git site

# change the name property of package.json (need to save temp file first)
tmp=$(mktemp)
JQVAR=".name = \"$PROJECTNAME-site\""
jq "$JQVAR" ./site/package.json >"$tmp" && mv "$tmp" ./site/package.json

# add author  to package.json
tmp=$(mktemp)
JQVAR=".author = \"$USER\""
jq "$JQVAR" ./site/package.json >"$tmp" && mv "$tmp" ./site/package.json

# create .env file
cp ./site/.env-template ./site/.env

# Put the project name into the HTML Title.
sed -i "" -e "s/---project-name---/$PROJECTNAME/g" ./site/src/index.njk

# nitialize git.

# clearn up any old .git folders
rm -rf ./site/.git   #  remove the previous git files.
rm -rf ./studio/.git #  remove the previous git files.

# initialise
git init
git add .
git commit -m "Initial commit"
git branch -M main


echo
echo $CYAN"Do you want to create a Github repo? y/N:"$RESET
read CREATE_REPO
CREATE_REPO=${CREATE_REPO:-N}

if [ "$CREATE_REPO" = "Y" ] || [ "$CREATE_REPO" = "y" ]; then
  echo "Createing a github repo"
  gh repo delete $PROJECTNAME
  gh repo create $PROJECTNAME --private --source=. --remote=upstream --push
else
  echo "OK not createing a github repo"
fi

echo
echo $CYAN"Install Dependencies? Y/n:"$RESET
read INSTALL_DEPENDENCIES
INSTALL_DEPENDENCIES=${INSTALL_DEPENDENCIES:-Y}

if [ "$INSTALL_DEPENDENCIES" = "Y" ] || [ "$INSTALL_DEPENDENCIES" = "y" ]; then
  echo "Installing dependencies"
  yarn install
else
  echo " You should do a 'yarn install' at some point."
fi

echo

echo
echo $GREEN_TICK" Sanity & Site installed"
echo
echo "Run project with$CYAN yarn start$RESET from project root"
echo "You might want to set up Netlify too"
echo "  $ cd site"
echo "  $ netlify init && netlify env:set CURRENT_ENV=production"
echo "  $ cd .."
echo "  $ cd studio"
echo "  $ netlify init"
echo $RED"IMPORTANT$RESET Change the projectId in $CYAN./studio/sanity.config.ts$RESET"